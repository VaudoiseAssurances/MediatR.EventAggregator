version: Build-{build}
image: Visual Studio 2017
build_script:
- cmd: dotnet build %APPVEYOR_BUILD_FOLDER% /p:Configuration=%buildConfig%;VersionSuffix=%suffix%
skip_commits:
  files:
    - docs/*
    - readme.md
branches:
  only:
  - develop
  - master
environment:
  ciScriptFolderName: .\dotnet-ci-scripts
  nugetScriptsFolder: $(ciScriptFolderName)\NuGet
  versioningScriptsFolder: $(ciScriptFolderName)\dotnet-versioning
  packageName: MediatR.EventAggregator
  csprojPath: .\MediatR.EventAggregator\MediatR.EventAggregator.csproj
  repoNuGet: https://www.nuget.org/api/v2
  repoNuGetPackage: $(repoNuGet)/package
  buildConfig: Release
install:
- git submodule update --init --recursive
before_build:
- dotnet restore "./MediatR.EventAggregator.sln"
- cmd: powershell %versioningScriptsFolder%/define-version-variables-appveyor.ps1 %csprojPath% %versioningScriptsFolder% %packageName% %APPVEYOR_REPO_BRANCH%
after_build:
- cmd: powershell %nugetScriptsFolder%/dotnet-pack-optionalsuffix.ps1 ./ %buildConfig% "%APPVEYOR_BUILD_FOLDER%/artifacts" %suffix%
artifacts:
- path: '**/MediatR.EventAggregator.*.nupkg '
  name: NuGet_pkg
deploy:
- provider: NuGet
  server: $(repoNuGetPackage)
  artifact: NuGet_pkg
  api_key:
    secure: uBphca4OZ4WuDCPtfgBWnGvqvQOirDAq+ErQubkiMwUBVnKfETzoMxsNS/ofyTZJ
  on:
    branch: develop
- provider: NuGet
  server: $(repoNuGetPackage)
  artifact: NuGet_pkg
  api_key:
    secure: uBphca4OZ4WuDCPtfgBWnGvqvQOirDAq+ErQubkiMwUBVnKfETzoMxsNS/ofyTZJ
  on:
    branch: master
  # Note on the NuGet deploy provider : 
  # Nuget takes a few minutes to index the published packages. If two builds are executed in a short time,
  # the subsequent packages will be built, but the publication to NuGet will fail, and the build will still be green on AppVeyor.
  # In order to fix this, one option would be to fail the build if a package could not be pushed 
  # because one already exists with the specified version.
  # In order to do so, we would need to get rid of the deploy provider, and do it all by hand. It shouldn't be too much work.

